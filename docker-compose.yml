version: "3.9"

services:
  db:
    image: postgres:alpine3.17
    container_name: postgres_db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - .:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: on-failure

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bot_cont
    environment:
      TOKEN: ${TOKEN}
      ADMIN: ${ADMIN}
      CHAT_ID: ${CHAT_ID}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: psql_server
      DB_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./src:/app/src
      - ./migrations:/app/migrations
      - .alembic.ini:/app/alembic.ini
    depends_on:
      - db
    entrypoint: poetry run python3 -m src
  
  redis:
    image: redis:latest
    container_name: redis_cont

  poster-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: poster_beat_cont
    environment:
      TOKEN: ${TOKEN}
      ADMIN: ${ADMIN}
      CHAT_ID: ${CHAT_ID}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: psql_server
      DB_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS: redis
    depends_on:
      - redis
      - db
    volumes:
      - ./src:/app/src
    entrypoint: celery --app=src.tasks.tasks beat
  
  poster-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: poster_worker_cont
    environment:
      TOKEN: ${TOKEN}
      ADMIN: ${ADMIN}
      CHAT_ID: ${CHAT_ID}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: psql_server
      DB_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS: redis
    depends_on:
      - redis
      - db
      - poster-beat
    volumes:
      - ./src:/app/src
    entrypoint: celery --app=src.tasks.tasks worker

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flower_cont
    environment:
      TOKEN: ${TOKEN}
      ADMIN: ${ADMIN}
      CHAT_ID: ${CHAT_ID}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: psql_server
      DB_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS: redis
    entrypoint: celery --app=src.tasks.tasks flower
    depends_on:
      - redis
      - poster-worker