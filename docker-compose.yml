version: "3.9"

services:
  db:
    image: postgres:alpine3.17
    container_name: postgres_db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - .:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: on-failure

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bot_cont
    environment:
      TOKEN: ${TOKEN}
      ADMIN: ${ADMIN}
      CHAT_ID: ${CHAT_ID}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: postgres_db
      DB_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./src:/app/src
    depends_on:
      - db
    entrypoint: poetry run python3 -m src

  poster:
    build:
      context: .
      dockerfile: poster.Dockerfile
    container_name: poster
    environment:
      TOKEN: ${TOKEN}
      ADMIN: ${ADMIN}
      CHAT_ID: ${CHAT_ID}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres_db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      TG_CHANNEL_LINK: ${TG_CHANNEL_LINK}
    volumes:
      - ./poster:/app
    entrypoint: python3 main.py
  
  # lab:
  #   image: studing_lab:latest
  #   container_name: lab
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     DB_HOST: psql_server
  #     DB_PORT: 5432
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   ports:
  #     - "7070:7070"
  #   volumes:
  #     - ./lab_data:/app/data
  #   entrypoint: jupyter lab --ip=0.0.0.0 --port=7070 --no-browser --allow-root